{"ast":null,"code":"import _classCallCheck from \"/Users/dinglu/Desktop/react-demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dinglu/Desktop/react-demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dinglu/Desktop/react-demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dinglu/Desktop/react-demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dinglu/Desktop/react-demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/dinglu/Desktop/react-demo/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/dinglu/Desktop/react-demo/src/Toggle/Toggle.js\";\nimport React from 'react';\n\nvar Toggle =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Toggle, _React$Component);\n\n  function Toggle(props) {\n    var _this;\n\n    _classCallCheck(this, Toggle);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Toggle).call(this, props));\n    _this.state = {\n      isToggleOn: true\n    }; // 为了在回调中使用 `this`，这个绑定是必不可少的\n\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Toggle, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      this.setState(function (state) {\n        return {\n          isToggleOn: !state.isToggleOn\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"button\", {\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, this.state.isToggleOn ? 'ON' : 'OFF');\n    }\n  }]);\n\n  return Toggle;\n}(React.Component);","map":{"version":3,"sources":["/Users/dinglu/Desktop/react-demo/src/Toggle/Toggle.js"],"names":["React","Toggle","props","state","isToggleOn","handleClick","bind","setState","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,M;;;;;AACJ,kBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,gFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAb,CAFkB,CAGlB;;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AAJkB;AAKnB;;;;kCAEa;AACZ,WAAKC,QAAL,CAAc,UAAAJ,KAAK;AAAA,eAAK;AACtBC,UAAAA,UAAU,EAAE,CAACD,KAAK,CAACC;AADG,SAAL;AAAA,OAAnB;AAGD;;;6BAEQ;AACP,aACE;AAAQ,QAAA,OAAO,EAAE,KAAKC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKF,KAAL,CAAWC,UAAX,GAAwB,IAAxB,GAA+B,KADlC,CADF;AAKD;;;;EApBkBJ,KAAK,CAACQ,S","sourcesContent":["import React from 'react';\n\nclass Toggle extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {isToggleOn: true};\n    // 为了在回调中使用 `this`，这个绑定是必不可少的\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(state => ({\n      isToggleOn: !state.isToggleOn\n    }));\n  }\n\n  render() {\n    return(\n      <button onClick={this.handleClick}>\n        {this.state.isToggleOn ? 'ON' : 'OFF'}\n      </button>\n    )\n  }\n\n}"]},"metadata":{},"sourceType":"module"}